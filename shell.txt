# Что вы должны сделать в консоли Django?

# Создать двух пользователей (с помощью метода User.objects.create_user('username')).
# Создать два объекта модели Author, связанные с пользователями.
# Добавить 4 категории в модель Category.
# Добавить 2 статьи и 1 новость.
# Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
# Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
# Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
# Обновить рейтинги пользователей.
# Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
# Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
# Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

python manage.py shell

from django.db import models
from django.contrib.auth.models import User
from params import *
from django.db.models import Sum
from news.models import *
from django.db.models.functions import Coalesce

# Создать двух пользователей

u1 = User.objects.create(username='User1')
u2 = User.objects.create(username='User2')

# Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(Author_User=u1)
Author.objects.create(Author_User=u2)

Добавить 4 категории в модель Category.
Category.objects.create(name='Экономика')
Category.objects.create(name='Культура')
Category.objects.create(name='Погода')
Category.objects.create(name='Спорт')

# Добавить 2 статьи и 1 новость.
a1 = Author.objects.get(id=1)
a2 = Author.objects.get(id=2)

Post.objects.create(author=a1,categoryType='AR',title='Статья1', text='текст статьи1 от автора 1')
Post.objects.create(author=a2,categoryType='AR',title='Статья2', text='текст статьи2 от автора 2')
Post.objects.create(author=a1,categoryType='NW',title='Новость1', text='новость1 от автора 1')

# просмотр превью статьи при необходимости
Post.objects.get(id=2).preview() 

# Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1)) 
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=3))
Post.objects.get(id=2).postCategory.add(Category.objects.get(id=4))

# Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(commentPost=Post.objects.get(id=1), userPost=Author.objects.get(id=1).authorUser, text='комментарий1 от автора1')
Comment.objects.create(commentPost=Post.objects.get(id=1), userPost=Author.objects.get(id=2).authorUser, text='комментарий2 от автора2')
Comment.objects.create(commentPost=Post.objects.get(id=2), userPost=Author.objects.get(id=1).authorUser, text='комментарий3 от автора1')
Comment.objects.create(commentPost=Post.objects.get(id=2), userPost=Author.objects.get(id=2).authorUser, text='комментарий4 от автора2')

# Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Post.objects.get(id=1).like()
Post.objects.get(id=1).dislike()
Post.objects.get(id=2).like()
Post.objects.get(id=2).dislike()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).dislike()
Comment.objects.get(id=2).like()
Comment.objects.get(id=2).dislike()
Comment.objects.get(id=3).like()
Comment.objects.get(id=3).dislike()

# Обновить рейтинги пользователей.
a1 = Author.objects.get(id=1)
a1.update_rating()
a2 = Author.objects.get(id=2)
a2.update_rating()

# Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
a1.ratingAuthor
a1.post_set.all().values('rating')
a1.authorUser.comment_set.all().values('rating')


a2 = Author.objects.all().order_by('-ratingAuthor')[:1] 
a2
for b in a2:
	b.authorUser.username
	b.ratingAuthor

# Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
a3 = Post.objects.all().order_by('-rating')[:1]
for j in a3:
	f"Data : {j.dataCreations.day}"
	f"Rating: {j.rating}"
	j.author.authorUser
	j.title
	j.preview()


# Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
a4 = Comment.objects.all().filter(commentPost=a3)

for d in a4:
	F"Data : {d.dataCreation.day}/{d.dataCreation.month}/{d.dataCreation.year}"
	d.userPost
	F"Rating : {d.rating}"
	d.text